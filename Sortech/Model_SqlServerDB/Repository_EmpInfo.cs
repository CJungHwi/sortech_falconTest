// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.Data.SqlClient;
using Microsoft.EntityFrameworkCore;
//using Syncfusion.Blazor.Data;
using Sortech.DBConn;

namespace Sortech.Model_SqlServerDB
{
    public class Repository_EmpInfo : IRepository_EmpInfo
    {
        private readonly sortech_SqlServerDB_Context _DB;

        public Repository_EmpInfo(sortech_SqlServerDB_Context DB)
        {
            _DB = DB;
        }

        public List<CEmpInfo_proc> Select_proc()
        {
            return _DB.EmpInfo_proc.FromSqlRaw("exec EmpInfo_Retrieve").ToList();
        }

        public void Insert_proc(CEmpInfo_proc empInfo_Proc)
        {
            try
            {
                var parameter = new List<SqlParameter>();
                parameter.Add(new SqlParameter("@Empid", empInfo_Proc.Empid));
                parameter.Add(new SqlParameter("@Loginid", empInfo_Proc.Loginid));
                parameter.Add(new SqlParameter("@Password", empInfo_Proc.Password));
                parameter.Add(new SqlParameter("@EmpNm", empInfo_Proc.EmpNm));
                parameter.Add(new SqlParameter("@Birthday", empInfo_Proc.Birthday == null ? "" : empInfo_Proc.Birthday));
                parameter.Add(new SqlParameter("@Dept", empInfo_Proc.Dept == null ? "" : empInfo_Proc.Dept));
                parameter.Add(new SqlParameter("@Grade", empInfo_Proc.Grade == null ? "" : empInfo_Proc.Grade));
                parameter.Add(new SqlParameter("@Leave", empInfo_Proc.Leave == null ? "" : empInfo_Proc.Leave));

                _DB.Database.ExecuteSqlRaw("exec EmpInfo_Insert @Empid, @Loginid, @Password, @EmpNm, @Birthday, @Dept, @Grade, @Leave", parameter.ToArray());

                //_DB.SaveChanges();
            }
            catch (Exception e)
            {

                throw e;
            }
        }

        public void Update_proc(CEmpInfo_proc empInfo_Proc)
        {
            try
            {
                var parameter = new List<SqlParameter>();
                parameter.Add(new SqlParameter("@Empid", empInfo_Proc.Empid));
                parameter.Add(new SqlParameter("@Loginid", empInfo_Proc.Loginid));
                parameter.Add(new SqlParameter("@Password", empInfo_Proc.Password));
                parameter.Add(new SqlParameter("@EmpNm", empInfo_Proc.EmpNm));
                parameter.Add(new SqlParameter("@Birthday", empInfo_Proc.Birthday == null ? "" : empInfo_Proc.Birthday));
                parameter.Add(new SqlParameter("@Dept", empInfo_Proc.Dept == null ? "" : empInfo_Proc.Dept));
                parameter.Add(new SqlParameter("@Grade", empInfo_Proc.Grade == null ? "" : empInfo_Proc.Grade));
                parameter.Add(new SqlParameter("@Leave", empInfo_Proc.Leave == null ? "" : empInfo_Proc.Leave));

                _DB.Database.ExecuteSqlRaw("exec EmpInfo_Update @Empid, @Loginid, @Password, @EmpNm, @Birthday, @Dept, @Grade, @Leave", parameter.ToArray());

                //_DB.SaveChanges();
            }
            catch (Exception e)
            {

                throw e;
            }
        }

        public void Delete_proc(CEmpInfo_proc empInfo_Proc)
        {
            try
            {
                var parameter = new List<SqlParameter>();
                parameter.Add(new SqlParameter("@Empid", empInfo_Proc.Empid));

                _DB.Database.ExecuteSqlRaw("EmpInfo_Delete @Empid", parameter.ToArray());

                //_DB.SaveChanges();
            }
            catch (Exception e)
            {

                throw e;
            }
        }
    }
}